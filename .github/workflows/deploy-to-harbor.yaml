name: deploy-to-harbor
run-name: >-
  ${{ github.workflow }}
  :: ${{ github.event_name }}
  :: ${{ github.ref_type }}:${{ github.ref_name }}

on:
  push:
    tags:
      - "v*.*.*"

#concurrency:
#  group: ${{ github.workflow }}
#  cancel-in-progress: false

permissions:
  contents: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  #
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      is-match: ${{ steps.match.outputs.match }} # 'false' is coerced to false.
    steps:
      - id: match
        run: |
          # ::tyranno:: regex_1='^refs/tags/$<<~.cicd.tag.release-trigger>>$'
          regex_1='^v[0-9]+\.[0-9]+\.[0-9]+$'
          # ::tyranno:: regex_2='^refs/tags/$<<~.cicd.tag.prerelease-trigger>>$'
          regex_2='^v[0-9]+\.[0-9]+\.[0-9]+-((alpha|beta|rc)\.)?\d+$'
          if [[ "$GITHUB_REF" =~ $regex_1 ]]; then
            printf "Accepting %s for real release.\n" "$GITHUB_REF_NAME"
            echo "match=true" >> $GITHUB_OUTPUT
          elif [[ "$GITHUB_REF" =~ $regex_2 ]]; then
            printf "Accepting %s for preview/test release only.\n" "$GITHUB_REF_NAME"
            echo "match=true" >> $GITHUB_OUTPUT
          else
            echo "match=false" >> $GITHUB_OUTPUT
          fi

  guard:
    # Allows dependent tasks to use `needs: guard` without checking `is-match`.
    if: ${{ needs.check-tag.outputs.is-match }}
    needs: check-tag
    runs-on: ubuntu-latest
    steps:
      - run: |
          printf "Proceeding.\n"

  tag-latest:
    needs: guard
    name: Update pointer tags
    runs-on:
      - self-hosted
      - ubuntu-24.04
    steps:
      - uses: Actions-R-Us/actions-tagger@v2

  build-dist:
    needs: guard
    name: Build sdists and wheels
    runs-on:
      - self-hosted
      - buildchain
    env:
      UV_NO_SYNC: true
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
      - name: Build project
        run: |
          uv build --no-sources
      - name: Upload dist/ artifacts (wheels and sdists) as GH workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          compression-level: 0 # they're already gzip-compressed
          retention-days: 1 # no need to retain longer

  github-release:
    name: Release on GitHub
    runs-on:
      - self-hosted
      - buildchain
    needs: build-dist
    steps:
      - name: Download dist/ GH workflow artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          draft: ${{ contains(github.ref_name, '-') }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ secrets.github_token }}
          files: dist/*
      - name: Print info
        run: |
          printf "Published release: %s\n" '${{ steps.release.outputs.url }}'

  publish-to-harbor:
    needs: guard
    name: Publish to Harbor
    # https://github.com/rcsb/devops-cicd-github-actions/blob/master/.github/workflows/workflow-docker.yaml
    uses: rcsb/devops-cicd-github-actions/.github/workflows/workflow-docker.yaml@master
    with:
      repo_project: ${{ github.repository_owner }}
      docker_image_name: ${{ github.event.repository.name }}
      mainline_branch: ${{ github.ref_name }} # Tag name
