# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to CICD
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/cicd
# SPDX-License-Identifier: Apache-2.0
#
# SPDX-FileCopyrightText: Copyright 2024, the RCSB PDB and contributors
# SPDX-PackageHomePage: https://github.com/rcsb/rcsb-chem-search
# SPDX-License-Identifier: BSD-3-Clause
#
# Original source code is from:
# CICD (https://github.com/dmyersturnbull/cicd).
# This file includes modifications.
#
name: Deploy packages
run-name: ${{ github.workflow }} for ${{ github.ref_name }}

on:
  push:
    tags:
      # Mike handles the 'latest' tag
      - '^v(\d+)\.(\d+)\.(\d+)(?:-(alpha|beta|rc))?$' # match all semver, including prerelease
      - '^v(\d+)\.(\d+)\.(\d+)$' # match all non-prerelease semver
      #- '^v(\d+)\.([1-9]\d*)\.(\d+)$' # OR: match only 0.1.0+ (non-prerelease)
      #- '^(v[1-9]\d*)\.(\d+)\.(\d+)$' # OR: match only 1.0.0+ (non-prerelease)

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: false

permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:

  tag-latest:
    # This job tags the release as 'latest' and 'v<x>', where <x> is its major version
    runs-on: ubuntu-latest
    steps:
      - uses: Actions-R-Us/actions-tagger@v2
        with:
          publish_latest_tag: true
          token: ${{ secrets.PAT }}

  build-dist:
    # This job builds the Hatch distribution artifacts (wheels and sdist).
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Hatch and build artifacts
        run: |
          pip install hatch~=1.12
          hatch build
      - name: Upload Hatch artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  check-dockerfile-exists:
    # This job checks whether the Dockerfile exists.
    runs-on: ubuntu-latest
    needs: build-dist
    outputs:
      docker_tags: ${{ steps.check-dockerfile.outputs.found }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Check for Dockerfile
        id: check-dockerfile
        run: |
          if [[ -f Dockerfile ]]; then
            echo "Dockerfile exists."
            echo "found=true" >> ${GITHUB_OUTPUT}
          else
            echo "Dockerfile does not exist."
            echo "found=false" >> ${GITHUB_OUTPUT}
          fi

  publish-github-release:
    # This job publishes the release on GitHub.
    runs-on: ubuntu-latest
    needs: build-dist
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ secrets.github_token }}
          files: dist/*

  publish-pypi:
    # This job publishes the package to PyPI.
    name: Publish to PyPi
    needs: build-dist
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Install Hatch
        run: |
          pip install hatch~=1.12
      - name: Publish to PyPi
        run: |
          hatch publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        if: secrets.PYPI_TOKEN != ''

  publish-docker:
    name: Publish to Docker container registries
    needs:
      - bump
    runs-on: ${{ os }}
    steps:
      # https://github.com/sigstore/cosign-installer
      - name: Nothing
        run: |
          echo "Not doing anything"
