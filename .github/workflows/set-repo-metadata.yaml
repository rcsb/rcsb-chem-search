# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0
#
name: Update Project Settings

on:
  push:
    branches:
      - main
      - master

jobs:
  update_settings:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PyYAML
        run: pip install 'pyyaml >=6'

      - name: Read project.yaml and set repository settings
        id: update_project_settings
        run: |
          import os
          from pathlib import Path

          import yaml

          path = Path(".github/project.yaml")
          data = yaml.safe_loads(path.read_text(encoding="utf-8"))

          # Extract data from YAML
          description = data.get("description", "")
          homepage = data.get("homepage", "")
          topics = data.get("topics", [])
          labels = data.get("labels", [])

          # Export data as environment variables for the next step
          print(f"::set-output name=description::{description}")
          print(f"::set-output name=homepage::{homepage}")
          print(f"::set-output name=topics::{",".join(topics)}")
          for label in labels:
              print(f"::set-output name=label_name_{labels.index(label)}::{label["name"]}")
              print(f"::set-output name=label_description_{labels.index(label)}::{label["description"]}")
              print(f"::set-output name=label_color_{labels.index(label)}::{label["color"]}")

      - name: Update repo settings
        uses: actions/github-script@v7
        with:
          script: |
            const description = process.env.DESCRIPTION || '';
            const homepage = process.env.HOMEPAGE || '';
            const topics = process.env.TOPICS ? process.env.TOPICS.split(',') : [];
            const labels = process.env.LABELS ? process.env.LABELS.split(',') : [];

            // Update repository description and homepage
            await github.repos.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              description: description,
              homepage: homepage
            });
            // Update repository topics
            await github.repos.replaceAllTopics({
              owner: context.repo.owner,
              repo: context.repo.repo,
              names: topics
            });
            // Update repository topics
            await github.repos.replaceAllTopics({
              owner: context.repo.owner,
              repo: context.repo.repo,
              names: topics
            });
            // Get existing labels
            const existingLabels = await github.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            // Delete existing labels
            for (const label of existingLabels.data) {
              await github.issues.deleteLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name
              });
            }

            // Add new labels
            const labels = [];
            for (let i = 0; process.env[`LABEL_NAME_${i}`]; i++) {
              labels.push({
                name: process.env[`LABEL_NAME_${i}`],
                description: process.env[`LABEL_DESCRIPTION_${i}`],
                color: process.env[`LABEL_COLOR_${i}`].replace('#', '')
              });
            }

            for (const label of labels) {
              await github.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name,
                description: label.description,
                color: label.color
              });
            }

        env:
          DESCRIPTION: ${{ steps.update_project_settings.outputs.description }}
          HOMEPAGE: ${{ steps.update_project_settings.outputs.homepage }}
          TOPICS: ${{ steps.update_project_settings.outputs.topics }}
          LABELS: ${{ steps.update_project_settings.outputs.labels }}
